package Model.APPS.CLOCK_XMC4.v4_0_22.Templates;

import Model.APPS.CLOCK_XMC4.v4_0_22.CLOCK_XMC4

out.print("""
/**
 * @cond
 ***********************************************************************************************************************
 *
 * Copyright (c) 2015-2016, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 * 2015-02-16:
 *     - Initial version for DAVEv4 <BR>
 * 2015-05-08:
 *     - Explicit braces added for global macros <BR>
 * 2015-09-22:
 *     - Macros are added for traps. <BR>
 * 2015-12-24:
 *     - Macros related to Traps are removed. <BR>
 *     - Macros related to clock source and clock divider settings are added. <BR>
 * 2016-05-25:
 *     - Macros is added for Ethernet.<BR>
 * 2016-07-08:
 *     - Fixed incorrect case for an included header.<br>
 *
 * @endcond
 *
 */
#ifndef CLOCK_XMC4_CONF_H
#define CLOCK_XMC4_CONF_H

/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/

/***********************************************************************************************************************
* MACROS
***********************************************************************************************************************/
""");
String appInst = null;

out.print("""
#define CLOCK_XMC4_MAJOR_VERSION (${(CLOCK_XMC4.version).findAll( /\d+/ )*.toInteger()[0]}U)
#define CLOCK_XMC4_MINOR_VERSION (${(CLOCK_XMC4.version).findAll( /\d+/ )*.toInteger()[1]}U)
#define CLOCK_XMC4_PATCH_VERSION (${(CLOCK_XMC4.version).findAll( /\d+/ )*.toInteger()[2]}U)
""")
for (CLOCK_XMC4 Instance : appInstancesList ) {
 appInst = Instance.getInstanceLabel()
 
if(Instance.gcombo_extclkmode.value != "Disabled")
{
float OscFreq = ((Instance.gfloat_extclkoscfreq.value) * 1000000)
out.print("""
/* High precision external oscillator enabled */
#define CLOCK_XMC4_OSCHP_ENABLED
/* High precision external oscillator frequency */
#define CLOCK_XMC4_OSCHP_FREQUENCY (${(Integer)OscFreq}U)""");
}
if((Instance.gcheck_enable_ccu_clock.value == true))
{
out.print("""
/* Capture/Compare unit clock enabled */
#define CLOCK_XMC4_CCUCLK_ENABLED""");
}
if((Instance.ggroup_usbfreq.visible == true) && (Instance.gcheck_enable_usb_clock.value == true))
{
out.print("""
/* USB clock enabled */
#define CLOCK_XMC4_USBCLK_ENABLED""");
}
if((Instance.gcheck_enable_wdt_clock.value == true))
{
out.print("""
/* Watchdog clock enabled */
#define CLOCK_XMC4_WDTCLK_ENABLED """);
}
if((Instance.ggroup_ebufreq.visible == true) && (Instance.gcheck_enable_ebu_clock.value == true))
{
out.print("""
/* EBU clock enabled */
#define CLOCK_XMC4_EBUCLK_ENABLED""");
}
if((Instance.ggroup_ethfreq.visible == true) && (Instance.gcheck_enable_eth_clock.value == true))
{
out.print("""
/* Ethernet clock enabled */
#define CLOCK_XMC4_ETHCLK_ENABLED""");
}
if((Instance.ggroup_ecatfreq.visible == true) && (Instance.gcheck_enable_ecat_clock.value == true))
{
out.print("""
/* EtherCAT clock enabled */
#define CLOCK_XMC4_ECATCLK_ENABLED""");
}
}
out.print("""
#endif /* End of CLOCK_XMC4_CONF_H */
""");